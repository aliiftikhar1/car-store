
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Brand {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Cars        Car[]    @relation("BrandCars")
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  password    String
  type        String
  location    String
  status      String
  verified    Boolean
  phoneNo     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Cars        Car[]    @relation("SellerCars")
  Auctions    Auction[] @relation("SellerAuctions")
  Bids        Bidding[] @relation("UserBids")
}

model Car {
  id          Int      @id @default(autoincrement())
  brandId     Int
  sellerId    Int
  name        String
  description String    @db.Text
  highlights  String    @db.Text
  specs       String    @db.Text
  chasisNo    String
  exterior    String
  interior    String
  lotNo       String
  location    String
  mileage     String
  orientation String
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Brand       Brand    @relation("BrandCars", fields: [brandId], references: [id])
  Seller      User     @relation("SellerCars", fields: [sellerId], references: [id])
  Images      CarImage[]
  Auctions    Auction[]
  Bids        Bidding[]
}

model CarImage {
  id        Int      @id @default(autoincrement())
  carId     Int
  url       String
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Car       Car      @relation(fields: [carId], references: [id])
}

model Auction {
  id           Int      @id @default(autoincrement())
  startDate    DateTime
  endDate      DateTime
  carId        Int
  sellerId     Int
  views        Int      @default(0)
  watching     Int      @default(0)
  location     String
  closingPrice String
  status       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Car          Car      @relation(fields: [carId], references: [id])
  Seller       User     @relation("SellerAuctions", fields: [sellerId], references: [id])
  Bids         Bidding[]
}

model Bidding {
  id        Int      @id @default(autoincrement())
  auctionId Int
  userId    Int
  carId     Int
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Auction   Auction  @relation(fields: [auctionId], references: [id])
  User      User     @relation("UserBids", fields: [userId], references: [id])
  Car       Car      @relation(fields: [carId], references: [id])
}
